
<html>
<head>

  <meta charset="utf-8">
</head>
<body>
 


  <input type="submit" value="Submit" onclick="init()">
  
  <canvas id="can"></canvas>
  <span id="test"></span>  
  <span id="pos"></span>  
  
</body>
</html>




<script>
var canvas = document.getElementById("can");
canvas.width = 250;
canvas.height = 250;

var ctx = canvas.getContext("2d");
var grid = [];
var globalOffset = 30;

canvas.addEventListener("click", function(e) {
  
  var rect = canvas.getBoundingClientRect();
  
  var pos = {
    x: e.clientX - rect.left,
    y: e.clientY - rect.top
  }
});


function init() {

  for (var i = 0; i < 5; i++) {
    for (var j = 0; j < 5; j++) {
      var hex = new Hex(i, j, 20);
      grid.push(hex)
    }
  }

  for (var hex in grid) {
    var item = grid[hex];
    ctx.beginPath();
    ctx.moveTo(item.points[0].x, item.points[0].y);

    for (var k = 1; k < item.points.length; k++) {
      ctx.lineTo(item.points[k].x, item.points[k].y);
    }

    ctx.closePath();
    ctx.stroke();

    var text = item.id;
    ctx.fillStyle = "black";
    ctx.fillText(text, item.midPoint.x - 7, item.midPoint.y - item.size / 2.2);

  }

  function Point(x, y) {
    this.x = x;
    this.y = y;
    
  }
function test(x,y){
  
    this.x = x;
    this.y = y;
  for(var t=0; t<=x*y;t++){
    var result=t++;
    console.log(result);
          }}

  function Hex(x, y, size) {
    this.size = 20;
    this.x = x;
    this.y = y;
    this.points = [];
    this.id = [];
    

    this.create = function(x, y) {
      var offSetX = (size / 2 * x) * -1
      var offSetY = 0;

      if (x % 2 == 1) {
        offSetY = Math.sqrt(3) / 2 * this.size;
      }

      var center = new Point(
        x * this.size * 2 + offSetX + globalOffset,
        y * Math.sqrt(3) / 2 * this.size * 2 + offSetY + globalOffset
      )

      this.midPoint = center;
       this.id [0]=x;    
       this.id [1]=y;


      for (var i = 0; i < 6; i++) {
        var degree = 60 * i;
        var radian = Math.PI / 180 * degree;

        var point = new Point(
          center.x + size * Math.cos(radian),
          center.y + size * Math.sin(radian)
        )

        this.points.push(point);
      }
    }

    this.create(x, y);
  }
    
}
</script>
<style>
canvas {
  border: 1px solid red;
  width: 400px;
  height: 400px;
}
</style>